// Basic Exercises involving Bools

type Bool {
  true
  false
}

// is true
// returns true if input is true
// is_true(a: Bool): Bool
//    case a {
//        true: true
//        false: false
//    }

// teste:_
// is_true(true)

// is false
// return true if input is false 
// is_false(i: Bool): Bool
//    case i {
//        true: false
//        false: true
//    }

//teste:_
//is_false(true)

// negation 
// returns the opposite of a bool 
// is_negation(n: Bool): Bool
//    case n {
//      true: false  
//     false: true
//    }

// teste:_
// is_negation(true)

// And
// returns true if both inputs are true 
//and(d: Bool, e: Bool): Bool
//    case d e {
//        false false: false
//        false true: false
//        true false: false    
//        true true: true
//    }

//teste:Bool
//and(true, true)

// Or 
// returns true if any input is true
//or(o: Bool, r: Bool): Bool
//    case o r {
//        false false: false
//       false true: true
//        true false: true
//        true true: true
//    }

//teste:_
//or(false, false)

// Equal
// returns true if both inputs are identical
eql(a: Bool, b: Bool): Bool
    case a b {
        false false: true
        false true: false
        true false: false
        true true: true
    }

//teste:_
//eql(false, false)

// Xor
// Returns true if both inputs are different
//xor(a: Bool, b: Bool): Bool
//    case a b {
//        false false: false
//        false true: true
//        true false: true
//        true true: false
//   }

//teste:_
//xor(true, false)

// Nor
// Returns true if both inputs are false
//nor(a: Bool, b: Bool): Bool
//    case a b {
//        false false: true
//        false true: false
//        true false: false
//        true true: false
//    }

//teste:_
//nor(false, false)


// Nand
// Returns true if both inputs are false
//nand(a: Bool, b: Bool): Bool
//    case a b {
//       false false: true
//        false true: false
//        true false: false
//        true true: false
//    }

//teste:_
//nand(false, false)

// Xnor
// Returns true if both inputs are identical 
xnor(a: Bool, b: Bool): Bool
    case a b {
        false false: true
        false true: false
        true false: false
        true true: true
    } 

teste:_
xnor(true, false)