// Basic Exercises involving Nats

type Nat {
  zero
  succ(pred: Nat)
}

// Increment
// 2 + 1 = 3
// 0 + 1 = 1
inc(a: Nat): Nat
  case a {
    zero: Nat.succ(Nat.zero)
    succ: Nat.succ(a)
  }

// ex3:_
// inc(Nat.succ(Nat.zero))


// Decrement
// 2 - 1 = 1
// 0 - 1 = 0
dec(a: Nat): Nat
 case a {
     zero: Nat.zero
     succ: a.pred
 }

// ex3:_
// dec(Nat.succ(Nat.succ(Nat.succ(Nat.zero))))


is_zero(a: Nat): Bool
  case a {
      zero: Bool.true
      succ : Bool.false
  }

ex3:_
is_zero(Nat.zero)